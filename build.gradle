group 'mx.com.technogi.testing'

buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
        springCloudContractVersion = '1.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${findProperty('springCloudContractVersion') ?: springCloudContractVersion}"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'spring-cloud-contract'
apply plugin: 'maven'
apply plugin: 'maven-publish'

jar {
	baseName = 'consumer-driven-contracts-server'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	//compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.cloud:spring-cloud-starter-contract-verifier')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$BOM_VERSION"
	}
}

contracts {
    packageWithBaseClasses = 'mx.com.technogi.testing.contracts'
//	A hack to get around using rootDir in multi-project build
    contractsDslDir = file("${project.projectDir}/src/test/resources/contracts/")
}
